// Faruk
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define YES cout<<"YES"<<endl;
#define NO cout<<"NO"<<endl;
#define SetBit(x,k)(x|=(1ll<<k))
#define ClearBit(x,k)(x&=~(1ll<<k))
#define CheckBit(x,k)((x>>k)&1)
#define CC(x) cout<<"Case "<<++x<<": ";
#define pi pair<long long int,long long int>
const int N = 3e5 + 10;
const int modulo = 10000007;
vector<ll>vg;
ll vp1[N][35];
map<pair<long long int,pi>,long long int>vp0;
map<long long int,long long int>vis;
map<long long int,long long int>vis1;
long long int fri(long long int l,long long k)
{
    long long int lo=l-1,hi=vg.size()-1,mid,sum=0,j,m=-2,c=0;
      //cout<<lo<<" "<<hi<<endl;
    while(lo<=hi)
    {
      
      mid=(hi+lo)/2;
      ll x=vg[mid],o,d=0,h=1;
      for(j=0;j<=31;j++)
      {
        if(x&h){
          if(l!=1)  o=vp1[mid][j]-vp1[l-2][j];
          else o=vp1[mid][j];
            //cout<<vp1[{l-1,{0,j}}]<<" bit "<<j<<endl;
            if(o==0)
            {
                d+=h;
            }
        }
        h=h<<1;
      }
    //   cout<<endl;
    //    cout<<hi<<" b "<<lo<<endl;
    //   cout<<mid<<endl;
    //   cout<<d<<" c "<<k<<endl;
      if(d>=k){
       lo=mid+1;m=mid;
      }
      else{
        hi=mid-1;
      }
     // cout<<hi<<" "<<lo<<endl;
      //if(c++==10)break;
    }
    return m+1;
}
int main()
{
    ios_base ::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

#ifdef EPSILON
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("error.txt", "w", stderr);
#endif

    ll a,b,c,d,e,f,g,h,i,k,j,t,l,m,n,q;
    cin>>t;
    while (t--)
    {
        cin>>n;
        for(i=0;i<n;i++)
        {
            for(j=31;j>=0;j--)vp1[i][j]=0;
        }
        for(i=0;i<n;i++)
        {
            cin>>l;vg.push_back(l);
            k=l;
           // cout<<l<<endl;
            for(j=31;j>=0;j--)
            {
                if(CheckBit(k,j)){
                  //  vis[{1,j}]++;
                 //   vp1[{i,j}]=vis[{1,j}];
                }
                else {
                    vis[j]++;
                    //vp0[{i,j}]=
                }
                //vp1[{i,{1,j}}]= vis[{1,j}];
                vp1[i][j]= vis[j];
               // cout<<vis[{1,j}]<<" ";
            }
            //cout<<endl;
        }
        cin>>q;
        while(q--)
        {
            cin>>l>>k;
           m= fri(l,k);
           cout<<m<<" ";
        }
        cout<<endl;
        vg.clear();//vp1.clear();
        vis.clear();
    }
    
}