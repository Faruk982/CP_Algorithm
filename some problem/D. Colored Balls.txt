/*counting subset using dp*/
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define YES cout << "YES" << endl;
#define NO cout << "NO" << endl;
#define SetBit(x, k) (x |= (1ll << k))
#define ClearBit(x, k) (x &= ~(1ll << k))
#define CheckBit(x, k) ((x >> k) & 1)
#define CC(x) cout << "Case " << ++x << ": ";
#define pi pair<long long int, long long int>
#define fastio                  \
  ios_base::sync_with_stdio(0); \
  cin.tie(0);                   \
  cout.tie(0)
  const int N = 2e5+10;
const int M = 998244353;
vector<ll>vdv[N];
map<ll, ll> vis;
ll i,j,k,m,n,a,b,c,d,l,q,s;

 vector<ll>vk; map<ll,ll>vis1;

long long int binE(long long int a, long long int b)
{
  long long res = 1;
  while (b > 0)
  {
    if (b & 1)
    {
      res = (res * a) % M;
    }
    a = (a * a) % M;
    b >>= 1;
  }
  return res;
}
ll sum;
ll dp[6000][6000];

ll cll(ll x){
  ll d=x/2;
  if(x&1)d++;
  return d;
}

int main()
{
  // for(ll i=1;i<N;i++)
  //   {
  //    for(ll j=i;j<N;j+=i){
  //     vdv[j].push_back(i);
  //    // cout<<i<<endl;
  //    }
  //   }
   // for(auto x:vdv[10])cout<<x<<endl;
  ll t;
  // cin>>t; ll tt=1,P=-1200;
 t=1;
  while (t--)
  {
   cin>>n;vk.clear();
   vector<ll>cnt(6000,0);
   for(i=0;i<=5000;i++){
    for(j=0;j<=5000;j++)dp[i][j]=0;
   }
   for(i=0;i<n;i++){
    cin>>l;vk.push_back(l);
   }
   sort(vk.begin(),vk.end());
   cnt[vk[0]]++;
   dp[vk[0]][vk[0]]++;
   for(i=1;i<n;i++){
    for(j=5000;j>vk[i];j--){
      dp[j][vk[i]]=(dp[j][vk[i]]+cnt[j-vk[i]])%M;
      cnt[j]=(cnt[j]+cnt[j-vk[i]])%M;
    }
    cnt[vk[i]]++;
    dp[vk[i]][vk[i]]++;
   }
   d=0;
   for(i=1;i<=5000;i++){
    for(j=1;j<=i;j++){
      if(j<=cll(i)){
      ll a=(cll(i))%M;
        a=(a*dp[i][j])%M;
        d=(d+a)%M;
      }
      else{
         ll a=(j)%M;
        a=(a*dp[i][j])%M;
        d=(d+a)%M;
      }
    }
   }
   cout<<d<<endl;
  }
  
}
Â 