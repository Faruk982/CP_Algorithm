// Faruk
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define YES cout << "YES" << endl;
#define NO cout << "NO" << endl;
#define SetBit(x, k) (x |= (1ll << k))
#define ClearBit(x, k) (x &= ~(1ll << k))
#define CheckBit(x, k) ((x >> k) & 1)
#define CC(x) cout << "Case " << ++x << ": ";
#define pi pair<long long int, long long int>
const int N = 3e5 + 10;
const int M = 998244353;

vector<ll> vg;
vector<ll> vk;
map<ll, ll> vis1;
map<ll, ll> vis2;
map<ll, ll> vis3;
ll i, j, k, l, m, n, a, b, c, d, f, g, h, t, q, e, x, y, z, w;
ll dp[N][2];
ll f_f(ll i, ll st)
{
  if (i == n)
    return 0;
  if (dp[i][st] != -1)
    return dp[i][st];
  ll take = -1, nt = 0;
  if (vis3[vg[i]])
    nt = 1;
  nt += f_f(i + 1, 0);
  vis3[vg[i]] = 0;
  if (vis2[i] != -1)
  {
    vis3[vg[i]] = 1;
    take = vis2[i] - i + f_f(vis2[i], 1);
  }
  dp[i][st] = max(take, nt);
  return dp[i][st];
}
bool cmp(pair<long long int, long int> p1, pair<long long int, long int> p2)
{
  if (p1.first == p2.first)
  {
    return p1.second > p2.second;
  }
  else
    return p1.first < p2.first;
}
long long int binE(long long int a, long long int b)
{
  long long res = 1;
  while (b > 0)
  {
    if (b & 1)
    {
      res = (res * a) % M;
    }
    a = (a * a) % M;
    b >>= 1;
  }
  return res;
}
map<ll, ll> facc;
ll fac(ll n)
{
  ll j, l = 1, a = 1;
  if (facc[n] != 0)
    return facc[n];
  for (j = 1; j <= n; j++)
  {
    a = (a * j) % M;
  }
  if (n == 0)
    a = 1;
  return a;
}
ll com(ll n, ll x)
{

  ll a = fac(n), b = fac(n - x);
  a = (a * binE(b, M - 2)) % M;
  if (x == 0)
    a = 1;
  if (n == x)
    a = fac(n);
  return a;
}

int main()
{
  cin >> t;
  n = 1e9 + 10; // t=1;
  l = 1;
  //  for(i=0;i<=n;i++)
  //  {
  //    if(i==0)facc[i]=l;
  //    else l=(l*i)%M;
  //    facc[i]=l;
  //  }
  map<ll,ll>getb;
  for(i=0;i<=63;i++){
    ll d=0;SetBit(d,i);
    vis1[d]=1;
     getb[d]=i;
  }
  //vis1[0] = 1;
  vector<ll> pre;
  ll tt=1,P=845;
  while (t--)
  {
    cin >> n;
    ll sum = 0;string str;
    if(tt==P)str+=to_string(n);
    for (i = 0; i < n; i++)
    {
      cin >> l;  if(tt==P){
        str+=to_string(l);str+='a';
      }

      vk.push_back(l);
      sum += l;
    }
    //if(tt++==P)cout<<str<<endl;
    c = 1;
    if (sum % n != 0)
      c = 0;
    else
    {
      set<ll> give, take;
      ll av = sum / n;
      map<ll,ll>vga,vtak;
    //  cout<<av<<endl;
      for (i = 0; i < vk.size(); i++)
      {
        ll h = av - vk[i];
        if (h == 0)
          continue;
        ll x, y;
        ll ki = abs(h);
         ll powagese=0;
        for (int j = 0; j <= 63; j++)
        {
         ll d=0;SetBit(d,j);ll f=d;
         d+=ki;
         if(vis1[d]){
          if(h>0){
            x=getb[d];y=j;
          }
          else{
            y=getb[d];x=j;
          }
          // cout<<h<<endl;
         //  cout<<i<<" "<<x<<" "<<y<<endl;
          if(vga[x]==0)give.insert(x);
          if(vtak[y]==0)take.insert(y);
          vga[x]++;vtak[y]++;
          powagese=1;
          break;
         }
        }
        if(!powagese){
          c=0;break;
        }
      }
      
      while (give.size()&&take.size()&&c)
      {
        auto it=give.begin();
        ll a=*it;
        ll d=0;SetBit(d,a);
       // cout<<d<<endl;
        auto jt=take.find(a);
        if(jt!=take.end()){
            vga[a]--;vtak[a]--;
            if(vga[a]==0)give.erase(it);
            if(vtak[a]==0)take.erase(jt);
        }
        else{
          c=0;break;
        }
      }
      
    }
    if (c)
      YES else NO
          vk.clear();
    pre.clear();
    vg.clear();
    vis2.clear();
    vis3.clear();
  }
}